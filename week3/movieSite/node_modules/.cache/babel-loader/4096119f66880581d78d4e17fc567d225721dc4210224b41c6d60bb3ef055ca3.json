{"ast":null,"code":"var _jsxFileName = \"/Users/xxinzzi/Desktop/UMC/week3/movieSite/src/screens/MovieDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport styled from \"styled-components\";\nimport StarRating from \"../components/StarRating\";\nimport Cast from \"../components/Cast\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n`;\n_c = Wrapper;\nconst Image = styled.img`\n  height: 500px;\n  border-radius: 7px;\n`;\n_c2 = Image;\nconst MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: left;\n  margin: 50px;\n`;\n_c3 = MovieInfo;\nconst Title = styled.h2`\n  margin: 10px 0px;\n  font-size: 20px;\n  color: white;\n`;\n_c4 = Title;\nconst VoteAverage = styled.span`\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n_c5 = VoteAverage;\nconst ReleaseDate = styled.span`\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n_c6 = ReleaseDate;\nconst OverviewWrapper = styled.div`\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n_c7 = OverviewWrapper;\nconst Overview = styled.span`\n  width: 600px;\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n_c8 = Overview;\nconst MovieDetailPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n      }\n    };\n    fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options).then(response => response.json()).then(data => {\n      setMovie(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setLoading(false);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : movie && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(VoteAverage, {\n          children: [\"\\uD3C9\\uC810 \", /*#__PURE__*/_jsxDEV(StarRating, {\n            value: Math.round(movie.vote_average)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ReleaseDate, {\n          children: [\"\\uAC1C\\uBD09\\uC77C \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(OverviewWrapper, {\n          children: \"\\uC904\\uAC70\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Overview, {\n          children: movie.overview ? movie.overview : 'TMDB에서 제공하는 API에 상세 줄거리 정보가 없습니다.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetailPage, \"LqYMrbrG2lnYdP4BptMrPEEIlT8=\", false, function () {\n  return [useParams];\n});\n_c9 = MovieDetailPage;\nexport default MovieDetailPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"MovieInfo\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"VoteAverage\");\n$RefreshReg$(_c6, \"ReleaseDate\");\n$RefreshReg$(_c7, \"OverviewWrapper\");\n$RefreshReg$(_c8, \"Overview\");\n$RefreshReg$(_c9, \"MovieDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Loader","styled","StarRating","Cast","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","div","_c","Image","img","_c2","MovieInfo","_c3","Title","h2","_c4","VoteAverage","span","_c5","ReleaseDate","_c6","OverviewWrapper","_c7","Overview","_c8","MovieDetailPage","_s","loading","setLoading","movie","setMovie","id","options","method","headers","accept","Authorization","fetch","then","response","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","src","poster_path","alt","title","value","Math","round","vote_average","release_date","overview","_c9","$RefreshReg$"],"sources":["/Users/xxinzzi/Desktop/UMC/week3/movieSite/src/screens/MovieDetailPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; \nimport Loader from \"../components/Loader\";\nimport styled from \"styled-components\";\nimport StarRating from \"../components/StarRating\";\nimport Cast from \"../components/Cast\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.5);\n  height: 100vh;\n  width: 100vw;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Image = styled.img`\n  height: 500px;\n  border-radius: 7px;\n`;\n\nconst MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: left;\n  margin: 50px;\n`;\n\nconst Title = styled.h2`\n  margin: 10px 0px;\n  font-size: 20px;\n  color: white;\n`;\n\nconst VoteAverage = styled.span`\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n\nconst ReleaseDate = styled.span`\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n\nconst OverviewWrapper = styled.div`\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n\nconst Overview = styled.span`\n  width: 600px;\n  margin: 10px 0px;\n  font-size: 15px;\n  color: white;\n`;\n\nconst MovieDetailPage = () => {\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n      }\n    };\n    \n    fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options)\n      .then(response => response.json())\n      .then(data => {\n        setMovie(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(err);\n        setLoading(false);\n      });\n  }, [id]);\n\n  return (\n    <Wrapper>\n      {loading ? (\n        <Loader />\n      ) : (\n        movie && (\n          <>\n            <Image src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n            <MovieInfo>\n              <Title>{movie.title}</Title>\n              <VoteAverage>평점 <StarRating value={Math.round(movie.vote_average)}/></VoteAverage>\n              <ReleaseDate>개봉일 {movie.release_date}</ReleaseDate>\n              <OverviewWrapper>줄거리</OverviewWrapper>\n              <Overview>{movie.overview ? movie.overview : 'TMDB에서 제공하는 API에 상세 줄거리 정보가 없습니다.'}</Overview>\n            </MovieInfo>\n          </>\n        )\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MovieDetailPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}