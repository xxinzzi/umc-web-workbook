{"ast":null,"code":"var _jsxFileName = \"/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/PopularPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopularPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n      }\n    };\n    fetch('https://api.themoviedb.org/3/movie/popular?language=en-US&page=1', options).then(response => response.json()).then(data => {\n      setMovies(data.results); // API 호출 결과를 movies 상태에 저장\n      setLoading(false); // 로딩 상태 변경\n    }).catch(err => {\n      console.error(err);\n      setLoading(false); // 에러 발생 시 로딩 상태 변경\n    });\n  }, []); // 컴포넌트가 처음 렌더링될 때 한 번만 호출\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        // 각 영화마다 고유한 key prop 추가\n        poster_path: movie.poster_path,\n        title: movie.title,\n        overview: movie.overview,\n        vote_average: movie.vote_average\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PopularPage, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = PopularPage;\nexport default PopularPage;\nvar _c;\n$RefreshReg$(_c, \"PopularPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PopularPage","_s","loading","setLoading","movies","setMovies","useEffect","options","method","headers","accept","Authorization","fetch","then","response","json","data","results","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","Movie","poster_path","title","overview","vote_average","id","_c","$RefreshReg$"],"sources":["/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/PopularPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nconst PopularPage = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n      }\n    };\n\n    fetch('https://api.themoviedb.org/3/movie/popular?language=en-US&page=1', options)\n      .then(response => response.json())\n      .then(data => {\n        setMovies(data.results); // API 호출 결과를 movies 상태에 저장\n        setLoading(false); // 로딩 상태 변경\n      })\n      .catch(err => {\n        console.error(err);\n        setLoading(false); // 에러 발생 시 로딩 상태 변경\n      });\n  }, []); // 컴포넌트가 처음 렌더링될 때 한 번만 호출\n\n  return (\n    <div>\n      {loading ? (\n        <strong>Loading...</strong>\n      ) : (\n        <div>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id} // 각 영화마다 고유한 key prop 추가\n              poster_path={movie.poster_path}\n              title={movie.title}\n              overview={movie.overview}\n              vote_average={movie.vote_average}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PopularPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCS,SAAS,CAAC,MAAM;IACd,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACjB;IACF,CAAC;IAEDC,KAAK,CAAC,kEAAkE,EAAEL,OAAO,CAAC,CAC/EM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZX,SAAS,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACzBd,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDe,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBhB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEJ,OAAA;IAAAuB,QAAA,EACGpB,OAAO,gBACNH,OAAA;MAAAuB,QAAA,EAAQ;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3B3B,OAAA;MAAAuB,QAAA,EACGlB,MAAM,CAACuB,GAAG,CAAEC,KAAK,iBAChB7B,OAAA,CAAC8B,KAAK;QACW;QACfC,WAAW,EAAEF,KAAK,CAACE,WAAY;QAC/BC,KAAK,EAAEH,KAAK,CAACG,KAAM;QACnBC,QAAQ,EAAEJ,KAAK,CAACI,QAAS;QACzBC,YAAY,EAAEL,KAAK,CAACK;MAAa,GAJ5BL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CID,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}