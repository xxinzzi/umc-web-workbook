{"ast":null,"code":"var _jsxFileName = \"/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/NowPlayingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NowPlayingPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (await fetch(`https://api.themoviedb.org/3/discover/movie`)).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        coverImg: movie.medium_cover_image,\n        title: movie.title,\n        summary: movie.summary,\n        genres: movie.genres\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(NowPlayingPage, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = NowPlayingPage;\nexport default NowPlayingPage;\nvar _c;\n$RefreshReg$(_c, \"NowPlayingPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NowPlayingPage","_s","loading","setLoading","movies","setMovies","getMovies","json","fetch","data","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","Movie","coverImg","medium_cover_image","title","summary","genres","id","_c","$RefreshReg$"],"sources":["/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/NowPlayingPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nconst NowPlayingPage = () => {\n\n  \n    const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://api.themoviedb.org/3/discover/movie`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return (\n    <div>\n      {loading ? (\n        <strong>Loading...</strong>\n      ) : (\n        <div>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              coverImg={movie.medium_cover_image}\n              title={movie.title}\n              summary={movie.summary}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n};\n\nexport default NowPlayingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,6CACH,CAAC,EACDD,IAAI,CAAC,CAAC;IACRF,SAAS,CAACE,IAAI,CAACE,IAAI,CAACL,MAAM,CAAC;IAC3BD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACDO,SAAS,CAAC,MAAM;IACdJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACEP,OAAA;IAAAY,QAAA,EACGT,OAAO,gBACNH,OAAA;MAAAY,QAAA,EAAQ;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3BhB,OAAA;MAAAY,QAAA,EACGP,MAAM,CAACY,GAAG,CAAEC,KAAK,iBAChBlB,OAAA,CAACmB,KAAK;QAEJC,QAAQ,EAAEF,KAAK,CAACG,kBAAmB;QACnCC,KAAK,EAAEJ,KAAK,CAACI,KAAM;QACnBC,OAAO,EAAEL,KAAK,CAACK,OAAQ;QACvBC,MAAM,EAAEN,KAAK,CAACM;MAAO,GAJhBN,KAAK,CAACO,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAACd,EAAA,CArCID,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}