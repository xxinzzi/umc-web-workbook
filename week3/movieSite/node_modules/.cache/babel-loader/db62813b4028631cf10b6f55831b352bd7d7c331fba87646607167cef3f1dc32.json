{"ast":null,"code":"var _jsxFileName = \"/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/MovieDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetailPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const {\n    title\n  } = useParams();\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n      }\n    };\n    fetch(`https://api.themoviedb.org/3/movie_title=${title}`, options).then(response => response.json()).then(data => {\n      setMovie(data.results); // API 호출 결과를 movies 상태에 저장\n      setLoading(false); // 로딩 상태 변경\n    }).catch(err => {\n      console.error(err);\n      setLoading(false); // 에러 발생 시 로딩 상태 변경\n    });\n  }, [title]); // title이 변경될 때마다 useEffect 재실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: movie.poster_path,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VoteAverage, {\n        children: movie.vote_average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReleaseDate, {\n        children: movie.release_date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Overview, {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Back to List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(MovieDetailPage, \"5JTsLXZzblAYf8crwBF5bzKeXdA=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetailPage;\nexport default MovieDetailPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailPage\");","map":{"version":3,"names":["React","useEffect","useParams","jsxDEV","_jsxDEV","MovieDetailPage","_s","loading","setLoading","useState","movie","setMovie","title","options","method","headers","accept","Authorization","fetch","then","response","json","data","results","catch","err","console","error","children","Image","src","poster_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","MovieInfo","Title","VoteAverage","vote_average","ReleaseDate","release_date","Overview","overview","_c","$RefreshReg$"],"sources":["/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/MovieDetailPage.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; \n\nconst MovieDetailPage = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [movie, setMovie] = useState([]);\n\n  const { title } = useParams();\n\n  useEffect(() => {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n        }\n      };\n  \n      fetch(`https://api.themoviedb.org/3/movie_title=${title}`, options)\n        .then(response => response.json())\n        .then(data => {\n          setMovie(data.results); // API 호출 결과를 movies 상태에 저장\n          setLoading(false); // 로딩 상태 변경\n        })\n        .catch(err => {\n          console.error(err);\n          setLoading(false); // 에러 발생 시 로딩 상태 변경\n        });\n    }, [title]); // title이 변경될 때마다 useEffect 재실행\n\n    return (\n      <div>\n        <Image src={movie.poster_path} alt={movie.title} />\n        <MovieInfo>\n          <Title>{movie.title}</Title>\n          <VoteAverage>{movie.vote_average}</VoteAverage>\n          <ReleaseDate>{movie.release_date}</ReleaseDate>\n          <Overview>{movie.overview}</Overview>\n        </MovieInfo>\n        <button>Back to List</button>\n      </div>\n    );\n};\n\nexport default MovieDetailPage;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAAEG;EAAM,CAAC,GAAGV,SAAS,CAAC,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZ,MAAMY,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACjB;IACF,CAAC;IAEDC,KAAK,CAAE,4CAA2CN,KAAM,EAAC,EAAEC,OAAO,CAAC,CAChEM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZX,QAAQ,CAACW,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACxBf,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDgB,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBjB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACER,OAAA;IAAAwB,QAAA,gBACExB,OAAA,CAACyB,KAAK;MAACC,GAAG,EAAEpB,KAAK,CAACqB,WAAY;MAACC,GAAG,EAAEtB,KAAK,CAACE;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDhC,OAAA,CAACiC,SAAS;MAAAT,QAAA,gBACRxB,OAAA,CAACkC,KAAK;QAAAV,QAAA,EAAElB,KAAK,CAACE;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5BhC,OAAA,CAACmC,WAAW;QAAAX,QAAA,EAAElB,KAAK,CAAC8B;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC/ChC,OAAA,CAACqC,WAAW;QAAAb,QAAA,EAAElB,KAAK,CAACgC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eAC/ChC,OAAA,CAACuC,QAAQ;QAAAf,QAAA,EAAElB,KAAK,CAACkC;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACZhC,OAAA;MAAAwB,QAAA,EAAQ;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEZ,CAAC;AAAC9B,EAAA,CAxCID,eAAe;EAAA,QAKDH,SAAS;AAAA;AAAA2C,EAAA,GALvBxC,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}