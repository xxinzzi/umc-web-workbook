{"ast":null,"code":"var _jsxFileName = \"/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/UpComing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpComingPage = () => {\n  _s();\n  const FullScreen = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    padding: 20px;\n  `;\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n      }\n    };\n    fetch('https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1', options).then(response => response.json()).then(data => {\n      setMovies(data.results); // API 호출 결과를 movies 상태에 저장\n      setLoading(false); // 로딩 상태 변경\n    }).catch(err => {\n      console.error(err);\n      setLoading(false); // 에러 발생 시 로딩 상태 변경\n    });\n  }, []); // 컴포넌트가 처음 렌더링될 때 한 번만 호출\n\n  return /*#__PURE__*/_jsxDEV(FullScreen, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        // 각 영화마다 고유한 key prop 추가\n        poster_path: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        title: movie.title,\n        overview: movie.overview,\n        vote_average: movie.vote_average\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UpComingPage, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = UpComingPage;\nexport default UpComingPage;\nvar _c;\n$RefreshReg$(_c, \"UpComingPage\");","map":{"version":3,"names":["React","useEffect","useState","Movie","styled","jsxDEV","_jsxDEV","UpComingPage","_s","FullScreen","div","loading","setLoading","movies","setMovies","options","method","headers","accept","Authorization","fetch","then","response","json","data","results","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","poster_path","title","overview","vote_average","id","_c","$RefreshReg$"],"sources":["/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/screens/UpComing.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Movie from \"../components/Movie\";\nimport styled from \"styled-components\";\n\nconst UpComingPage = () => {\n\n  const FullScreen = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    padding: 20px;\n  `;\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NzJlMTc4NmMzOTRiNTNiNDE0YjI4OWY0ZWU5YTk4NyIsInN1YiI6IjY2MzM0N2U5ODEzY2I2MDEyMTg2ZTlhYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.A159m_rOX_HnuFPW_aHnMOTiMYyXhQbT3yMamEeazCg'\n      }\n    };\n\n    fetch('https://api.themoviedb.org/3/movie/upcoming?language=en-US&page=1', options)\n      .then(response => response.json())\n      .then(data => {\n        setMovies(data.results); // API 호출 결과를 movies 상태에 저장\n        setLoading(false); // 로딩 상태 변경\n      })\n      .catch(err => {\n        console.error(err);\n        setLoading(false); // 에러 발생 시 로딩 상태 변경\n      });\n  }, []); // 컴포넌트가 처음 렌더링될 때 한 번만 호출\n\n  return (\n    <FullScreen>\n      {loading ? (\n        <strong>Loading...</strong>\n      ) : (\n        <div>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id} // 각 영화마다 고유한 key prop 추가\n              poster_path={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              title={movie.title}\n              overview={movie.overview}\n              vote_average={movie.vote_average}\n            />\n          ))}\n        </div>\n      )}\n    </FullScreen>\n  );\n};\n\nexport default UpComingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMc,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE;MACjB;IACF,CAAC;IAEDC,KAAK,CAAC,mEAAmE,EAAEL,OAAO,CAAC,CAChFM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZV,SAAS,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACzBb,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDc,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBf,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA,CAACG,UAAU;IAAAqB,QAAA,EACRnB,OAAO,gBACNL,OAAA;MAAAwB,QAAA,EAAQ;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3B5B,OAAA;MAAAwB,QAAA,EACGjB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBAChB9B,OAAA,CAACH,KAAK;QACW;QACfkC,WAAW,EAAG,mCAAkCD,KAAK,CAACC,WAAY,EAAE;QACpEC,KAAK,EAAEF,KAAK,CAACE,KAAM;QACnBC,QAAQ,EAAEH,KAAK,CAACG,QAAS;QACzBC,YAAY,EAAEJ,KAAK,CAACI;MAAa,GAJ5BJ,KAAK,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEjB,CAAC;AAAC1B,EAAA,CArDID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}