{"ast":null,"code":"var _jsxFileName = \"/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavbarWrapper = styled.div`\n  display: flex;\n  height: 40px;\n  width: 100%;\n  padding: 3px;\n  position: fixed;\n  left: 0px;\n  top: 0px;\n  background-color: rgb(30, 30, 50);\n  z-index: 999;\n`;\n_c = NavbarWrapper;\nconst LeftColumn = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-grow: 1;\n`;\n_c2 = LeftColumn;\nconst RightColumn = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-grow: 1;\n`;\n_c3 = RightColumn;\nconst TabText = styled.span`\n  font-size: 13px;\n  padding: 15px;\n  color: ${({\n  selected\n}) => selected ? \"yellow\" : \"white\"};\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n`;\n_c4 = TabText;\nconst Navbar = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태를 저장하는 state\n\n  const handleLoginClick = () => {\n    setIsLoggedIn(true);\n  };\n  const handleLogoutClick = () => {\n    setIsLoggedIn(false);\n  };\n  const handleTabClick = path => {\n    navigate(path);\n  };\n  const Tab = ({\n    path,\n    label\n  }) => {\n    const selected = window.location.pathname === path; // 선택된 탭이 현재 경로와 일치하는지 확인\n\n    const handleClick = () => {\n      handleTabClick(path);\n    };\n    return /*#__PURE__*/_jsxDEV(TabText, {\n      onClick: handleClick,\n      selected: selected,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(NavbarWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(LeftColumn, {\n      children: /*#__PURE__*/_jsxDEV(Tab, {\n        path: \"/\",\n        label: \"UMC Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RightColumn, {\n      children: [!isLoggedIn ?\n      /*#__PURE__*/\n      // 로그인 상태에 따라 다른 버튼 렌더링\n      _jsxDEV(TabText, {\n        onClick: handleLoginClick,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TabText, {\n        onClick: handleLogoutClick,\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        path: \"/popular\",\n        label: \"Popular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        path: \"/nowPlaying\",\n        label: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        path: \"/topRated\",\n        label: \"Top Rated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        path: \"/upComing\",\n        label: \"Upcoming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"GVHzGJnl+vLMWdf9aHFkM2Kljwg=\", false, function () {\n  return [useNavigate];\n});\n_c5 = Navbar;\nexport default Navbar;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"NavbarWrapper\");\n$RefreshReg$(_c2, \"LeftColumn\");\n$RefreshReg$(_c3, \"RightColumn\");\n$RefreshReg$(_c4, \"TabText\");\n$RefreshReg$(_c5, \"Navbar\");","map":{"version":3,"names":["React","useState","useNavigate","styled","jsxDEV","_jsxDEV","NavbarWrapper","div","_c","LeftColumn","_c2","RightColumn","_c3","TabText","span","selected","_c4","Navbar","_s","navigate","isLoggedIn","setIsLoggedIn","handleLoginClick","handleLogoutClick","handleTabClick","path","Tab","label","window","location","pathname","handleClick","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/xxinzzi/Desktop/UMC/week3/movieposter/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst NavbarWrapper = styled.div`\n  display: flex;\n  height: 40px;\n  width: 100%;\n  padding: 3px;\n  position: fixed;\n  left: 0px;\n  top: 0px;\n  background-color: rgb(30, 30, 50);\n  z-index: 999;\n`;\n\nconst LeftColumn = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-grow: 1;\n`;\n\nconst RightColumn = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-grow: 1;\n`;\n\nconst TabText = styled.span`\n  font-size: 13px;\n  padding: 15px;\n  color: ${({ selected }) => (selected ? \"yellow\" : \"white\")};\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n  }\n`;\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태를 저장하는 state\n\n  const handleLoginClick = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleLogoutClick = () => {\n    setIsLoggedIn(false);\n  };\n\n  const handleTabClick = (path) => {\n    navigate(path);\n  };\n\n  const Tab = ({ path, label }) => {\n    const selected = window.location.pathname === path; // 선택된 탭이 현재 경로와 일치하는지 확인\n\n    const handleClick = () => {\n      handleTabClick(path);\n    };\n\n    return (\n      <TabText onClick={handleClick} selected={selected}>\n        {label}\n      </TabText>\n    );\n  };\n\n  return (\n    <NavbarWrapper>\n      <LeftColumn>\n        <Tab path=\"/\" label=\"UMC Movie\" />\n      </LeftColumn>\n      <RightColumn>\n        {!isLoggedIn ? ( // 로그인 상태에 따라 다른 버튼 렌더링\n          <TabText onClick={handleLoginClick}>로그인</TabText>\n        ) : (\n          <TabText onClick={handleLogoutClick}>로그아웃</TabText>\n        )}\n        <Tab path=\"/popular\" label=\"Popular\" />\n        <Tab path=\"/nowPlaying\" label=\"Now Playing\" />\n        <Tab path=\"/topRated\" label=\"Top Rated\" />\n        <Tab path=\"/upComing\" label=\"Upcoming\" />\n      </RightColumn>\n    </NavbarWrapper>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,aAAa;AAYnB,MAAMG,UAAU,GAAGN,MAAM,CAACI,GAAI;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,UAAU;AAOhB,MAAME,WAAW,GAAGR,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GALID,WAAW;AAOjB,MAAME,OAAO,GAAGV,MAAM,CAACW,IAAK;AAC5B;AACA;AACA,WAAW,CAAC;EAAEC;AAAS,CAAC,KAAMA,QAAQ,GAAG,QAAQ,GAAG,OAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIH,OAAO;AAYb,MAAMI,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9BF,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMG,cAAc,GAAIC,IAAI,IAAK;IAC/BN,QAAQ,CAACM,IAAI,CAAC;EAChB,CAAC;EAED,MAAMC,GAAG,GAAGA,CAAC;IAAED,IAAI;IAAEE;EAAM,CAAC,KAAK;IAC/B,MAAMZ,QAAQ,GAAGa,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAKL,IAAI,CAAC,CAAC;;IAEpD,MAAMM,WAAW,GAAGA,CAAA,KAAM;MACxBP,cAAc,CAACC,IAAI,CAAC;IACtB,CAAC;IAED,oBACEpB,OAAA,CAACQ,OAAO;MAACmB,OAAO,EAAED,WAAY;MAAChB,QAAQ,EAAEA,QAAS;MAAAkB,QAAA,EAC/CN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEd,CAAC;EAED,oBACEhC,OAAA,CAACC,aAAa;IAAA2B,QAAA,gBACZ5B,OAAA,CAACI,UAAU;MAAAwB,QAAA,eACT5B,OAAA,CAACqB,GAAG;QAACD,IAAI,EAAC,GAAG;QAACE,KAAK,EAAC;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACbhC,OAAA,CAACM,WAAW;MAAAsB,QAAA,GACT,CAACb,UAAU;MAAA;MAAK;MACff,OAAA,CAACQ,OAAO;QAACmB,OAAO,EAAEV,gBAAiB;QAAAW,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,gBAEjDhC,OAAA,CAACQ,OAAO;QAACmB,OAAO,EAAET,iBAAkB;QAAAU,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CACnD,eACDhC,OAAA,CAACqB,GAAG;QAACD,IAAI,EAAC,UAAU;QAACE,KAAK,EAAC;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvChC,OAAA,CAACqB,GAAG;QAACD,IAAI,EAAC,aAAa;QAACE,KAAK,EAAC;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9ChC,OAAA,CAACqB,GAAG;QAACD,IAAI,EAAC,WAAW;QAACE,KAAK,EAAC;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1ChC,OAAA,CAACqB,GAAG;QAACD,IAAI,EAAC,WAAW;QAACE,KAAK,EAAC;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAACnB,EAAA,CAhDID,MAAM;EAAA,QACOf,WAAW;AAAA;AAAAoC,GAAA,GADxBrB,MAAM;AAkDZ,eAAeA,MAAM;AAAC,IAAAT,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}